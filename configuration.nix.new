# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];
  
  #Laptop power management
  systemd.sleep.extraConfig = "
  AllowSuspend=no
  AllowHibernation=no
  AllowHybridSleep=no
  AllowSuspendThenHibernate=no
  ";

  # Bootloader.
  #boot.loader.systemd-boot.enable = true;
  #boot.loader.efi.canTouchEfiVariables = true;
  # Use the systemd-boot EFI boot loader.
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  #boot.initrd.kernelModules = [ "amdgpu" ];
  networking.hostName = "Moon"; # Define your hostname.
  #networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
  hardware.bluetooth.enable = true;
  hardware.bluetooth.powerOnBoot = true;

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "Europe/Lisbon";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";

  i18n.extraLocaleSettings = {
    LC_ADDRESS = "pt_PT.UTF-8";
    LC_IDENTIFICATION = "pt_PT.UTF-8";
    LC_MEASUREMENT = "pt_PT.UTF-8";
    LC_MONETARY = "pt_PT.UTF-8";
    LC_NAME = "pt_PT.UTF-8";
    LC_NUMERIC = "pt_PT.UTF-8";
    LC_PAPER = "pt_PT.UTF-8";
    LC_TELEPHONE = "pt_PT.UTF-8";
    LC_TIME = "pt_PT.UTF-8";
  };

  # Enable the X11 windowing system.
  services.xserver.enable = true;
  #services.xserver.videoDrivers = [ "amdgpu" ];
  #services.displayManager.defaultSession = "none+bspwm";
  services.xserver.displayManager.lightdm = {
    enable = true;
    background = "/etc/lightdm/wallpaper.png";
  };
  services.displayManager.autoLogin.enable = false;
  services.displayManager.autoLogin.user = "jorgeveloso";
  services.xserver.windowManager.bspwm.enable = true;
  services.xserver.deviceSection = ''Option "TearFree" "true"'';
  services.gvfs.enable = true;

  # Enable the GNOME Desktop Environment. Set to false. Used only for restoring or troubleshooting purposes.
  #services.xserver.displayManager.gdm.enable = true;
  #services.xserver.desktopManager.gnome.enable = true;

  # Configure keymap in X11
  services.xserver.xkb = {
    layout = "pt";
    variant = "";
  };

  # Configure console keymap
  console.keyMap = "pt-latin1";

  # Enable CUPS to print documents. Disabled, I don't own a printer...
  services.printing.enable = false;

  # Enable sound with pipewire.
  services.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    #jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };

  # Enable touchpad support (enabled default in most desktopManager).
  #services.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.jorgeveloso = {
    isNormalUser = true;
    description = "Jorge Veloso";
    extraGroups = [ "networkmanager" "wheel" "libvirtd" "docker"];
    shell = pkgs.zsh;
    packages = with pkgs; [
    #  thunderbird
    ];
  };
  nixpkgs.config.zsh.enable = true;
    programs.zsh = {
    enable = true;
    shellAliases = {
      vim = "vim";
    };
    enableCompletion = true;
    autosuggestions.enable = true;
    syntaxHighlighting.enable = true;
  };
  # Install firefox.
  programs.firefox.enable = true;
  
  # enable Sway window manager
  programs.sway = {
    enable = true;
    wrapperFeatures.gtk = true;
  };  

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
  ######Sway packages#####
  grim
  slurp
  wl-clipboard
  mako
  #####End #####
  clementine 
  arandr 
  htop 
  #neofetch 
  fastfetch
  screenfetch 
  picom 
  rxvt-unicode 
  feh 
  dmenu 
  #nautilus 
  nemo
  chafa 
  vim 
  pavucontrol 
  pulsemixer
  flameshot 
  bspwm 
  sxhkd 
  discord 
  zsh 
  zsh-autosuggestions 
  zsh-syntax-highlighting 
  zsh-completions
  zsh-nix-shell
  zsh-autocomplete
  spaceship-prompt
  lxappearance 
  lightdm 
  arc-theme 
  arc-icon-theme 
  mpv 
  vlc 
  vimix-cursors
  killall
  cmatrix
  deluge
  nicotine-plus
  gparted
  zenity
  openssl
  tree
  gimp
  elinks
  fortune
  nmap
  virt-manager
  gnome-disk-utility
  efibootmgr
  oneko
  fd
  tldr
  blueman
  gucharmap
  font-awesome
  lemonbar
  sysstat
  ranger
  woeusb
  tcpdump
  roxterm
  sakura
  sl
  dig
  #ntfs3g
  wget
  #clamav
  chkrootkit
  yt-dlp
  lsof
  sox
  haskellPackages.soxlib
  file
  zip
  unzip
  p7zip
  asciiquarium
  inetutils
  hypnotix
  alock
  rpi-imager
  #lftp
  #filezilla
  firefox
  librewolf
  ffmpeg
  kitty
  btop
  smartmontools
  lm_sensors
  eog
  haskellPackages.dice
  vscodium
  shellcheck
  #rustc
  #cargo
  #rustup
  #obs-studio
  unrar
  #fritzing
  flatpak
  #calibre
  wineWowPackages.stable
  wineWowPackages.staging
  winetricks
  networkmanager
  numlockx
  #cava
  xautoclick
  #crawlTiles
  easyeffects
  alsa-utils
  zulu
  zulu8
  gpt4all
  koboldcpp
  fluent-reader 
  radeontop
  #rocmPackages_5.clr.icd
  #rocmPackages_5.clr
  #rocmPackages_5.rocminfo
  #rocmPackages_5.rocm-runtime
  uqm #The UrQuan Masters
  acpi
  bluez
  ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:
  services.gnome.gnome-keyring.enable = true;
  services.rsyslogd.enable = true;
  services.blueman.enable = true;
  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  networking.firewall.enable = true;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "25.05"; # Did you read the comment?

}
